paths:
  /api/carts:
    post:
      summary: New cart.
      description: Creates a new cart.
      tags:
        - Carts
      responses:
        201:
          description: Product created.
          content:
            application/json:
              schema:
                $ref: '#components/schemas/EmptyCart'
        400:
          description: Bad request.

  /api/carts/{cid}:
    parameters:
      - $ref: '#/components/parameters/cid'

    get:
      summary: Get one cart.
      description: Returns the cart with the associated cartId (cid).
      tags:
        - Carts
      responses:
        201:
          description: Products in cart.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        400:
          description: Bad request.

    put:
      summary: Update one cart.
      description: Modifies the cart with the associated cartId (cid).
      # requestBody:
      #   required: true
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#components/requestBodies/updateCart'
      #   description: You can send only the fields you want to update.
      tags:
        - Carts

    delete:
      summary: Delete one cart.
      description: Deletes the cart with the associated cartId (cid).
      tags:
        - Carts

  /api/carts/{cid}/product/{pid}:
    parameters:
      - $ref: '#/components/parameters/pid'
      - $ref: '#/components/parameters/cid'

    post:
      summary: Add product to cart.
      description: Adds the product with the associated productId (pid) to the cart with the associated cartId (cid).
      tags:
        - Carts

    put:
      summary: Update product quantity.
      description: Modifies the product with the associated productId (pid) in the cart with the associated cartId (cid).
      # requestBody:
      #   required: true
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#components/requestBodies/updateProductInCart'
      #   description: You can send only the fields you want to update.
      tags:
        - Carts

    delete:
      summary: Remove product from cart.
      description: Removes the product with the associated productId (pid) from the cart with the associated cartId (cid).
      tags:
        - Carts

  /api/carts/{cid}/purchase:
    parameters:
      - $ref: '#/components/parameters/cid'

    post:
      summary: Purchase a cart.
      description: Purchase a cart, affecting the inventory and sending and email to the user with details of the cart purchased.
      tags:
        -  Carts

components:
  schemas:
    EmptyCart:
      type: object
      properties:
        _id:
          type: string
          description: Mongo ID for the cart
          example: 5f7b1b4b9d6b9a0017b6d0a1
        products:
          type: array
          description: Empty array
          example: []
    Cart:
      type: array
      items:
        type: object
        properties:
          product:
            type: object
            properties:
              owner:
                type: string
                description: Mongo ID for the owner of the product
                example: 5f7b1b4b9d6b9a0017b6d0a1
              _id:
                type: string
                description: Mongo ID for the product
                example: 5f7b1b4b9d6b9a0017b6d0a1
              title:
                type: string
                description: Title of the product
                example: Cama queen
              description:
                type: string
                description: Description of the product
                example: Cama tamaño Queen con cabecero tapizado y almacenamiento en la base.
              code:
                type: string
                description: Code of the product
                example: 3ws4e5r6t
              price:
                type: number
                description: Price of the product
                example: 3200
              status:
                type: boolean
                description: Status of the product
                example: true
              stock:
                type: number
                description: Stock of the product
                example: 1
              category:
                type: string
                description: Category of the product
                example: Habitación
              thumbnails:
                type: array
                description: Array of thumbnails of the product
                items:
                  type: string
                  description: URL of the thumbnail
                  example: https://res.cloudinary.com/djlmqpd2n/image/upload/v1601900000/3ws4e5r6t.png
          quantity:
            type: number
            description: Quantity of the product
            example: 2

  parameters:
    cid:
      name: cid
      in: path
      required: true
      description: Mongo ID for the cart
      schema:
        $type: String
