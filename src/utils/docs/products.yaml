
paths:
  /api/products:
    get:
      summary: Get all products
      description: "Returns all the products, with pagination (defaults: limit=10, page=1, sort=none, query=none)"
      tags:
        - Products
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          required: false
          description: Number of products per page.
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          required: false
          description: Current page.
        - in: query
          name: sort
          schema:
            type: string
            enum: [asc, desc]
            default: null
          required: false
          description: Sort products by price.
        - in: query
          name: query
          schema:
            type: string
            default: null
          required: false
          description: Search products by category.
      responses:
        200:
          description: List of products (using pagination).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProducts'
        500:
          description: Something went wrong.

    post:
      summary: Create a new product
      description: Creates a new product.
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateProduct'
      responses:
        201:
          description: Product created.
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Product'
        400:
          description: Bad request.

  /api/products/{pid}:
    parameters:
      - $ref: '#/components/parameters/pid'

    get:
      summary: Get one product
      description: Returns the product with the associated productId (pid)
      tags:
        - Products
      responses:
        200:
          description: Product found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Product not found.

    put:
      summary: Update one product
      description: Modifies the product with the associated productId (pid).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateProduct'
        description: You can send only the fields you want to update.
      tags:
        - Products
      responses:
        200:
          description: Product updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Product not found.

    delete:
      summary: Delete one product
      tags:
        - Products
      responses:
        204:
          description: Product deleted.
        404:
          description: Product not found.

  /api/products/{pid}/thumbnails:
    post:
      summary: Add thumbnails to a product
      description: Uploads one or more images as thumbnails of the associated productId (pid).
      tags:
        - Products
      parameters:
        - $ref: '#/components/parameters/pid'
      requestBody:
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
      responses:
        201:
          description: Thumbnails added.
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Product'
        400:
          description: Bad request.

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Mongo autogenerated ID
        owner:
          type: String
          description: Email of the owner of the product.
        title:
          type: String
          description: Product title.
        description:
          type: String
          description: Product description.
        code:
          type: String
          description: Product code.
        price:
          type: Number
          description: Product price.
        status:
          type: Boolean
          description: Product status.
        stock:
          type: Number
          description: Product stock.
        category:
          type: String
          description: Product category.
        thumbnails:
          type: Array
          description: Product thumbnails.
          items:
            type: String
      example:
        _id: 650b4729671e2f6b58ffec3d
        owner: adminCoder@coder.com
        title: Placard
        description: Placard 2 puertas
        code: 4e9si09dsd
        price: 5000
        status: true
        stock: 3
        category: Habitación
        thumbnails: []

    PaginatedProducts:
      type: object
      properties:
        payload:
          type: Array
          description: List of products.
          items:
            $ref: '#components/schemas/Product'
        totalDocs:
          type: Number
          description: Total number of products.
        limit:
          type: Number
          description: Number of products per page.
        totalPages:
          type: Number
          description: Total number of pages.
        page:
          type: Number
          description: Current page.
        pagingCounter:
          type: Number
          description: Number of products in the current page.
        hasPrevPage:
          type: Boolean
          description: Whether there is a previous page.
        hasNextPage:
          type: Boolean
          description: Whether there is a next page.
        prevPage:
          type: Number
          description: Previous page number.
          nullable: true
        nextPage:
          type: Number
          description: Next page number.
          nullable: true
        status:
          type: String
          description: Request status.
        prevLink:
          type: String
          description: Link to the previous page.
          nullable: true
        nextLink:
          type: String
          description: Link to the next page.
          nullable: true
      example:
        payload:
          - _id: 650b4729671e2f6b58ffec3e
            title: Baúl
            description: Baúl madera/hierro 50x60x100
            code: 98sd09s8d00
            price: 400
            status: true
            stock: 46
            category: Habitación
            thumbnails: []
        totalDocs: 23
        limit: 10
        totalPages: 3
        page: 1
        pagingCounter: 1
        hasPrevPage: false
        hasNextPage: true
        prevPage: null
        nextPage: 2
        status: success
        prevLink: null
        nextLink: /api/products?page=2

  requestBodies:
    updateProduct:
      type: object
      properties:
        owner:
          type: String
          description: Email of the owner of the product.
        title:
          type: String
          description: Product title.
        description:
          type: String
          description: Product description.
        code:
          type: String
          description: Product code.
        price:
          type: Number
          description: Product price.
        status:
          type: Boolean
          description: Product status.
        stock:
          type: Number
          description: Product stock.
        category:
          type: String
          description: Product category.
        thumbnails:
          type: Array
          description: Product thumbnails.
          items:
            type: String
      example:
        owner: adminCoder@coder.com
        title: Placard
        description: Placard 3 puertas
        code: 4e9si09dsd
        price: 6700
        status: true
        stock: 6
        category: Habitación
        thumbnails: []

  parameters:
    pid:
      name: pid
      in: path
      required: true
      description: Product ID
      schema:
        $type: String
